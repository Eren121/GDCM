import os, sys

def BuildInstallOrPreinstallPath(DirName, FileName):
   # Builds a path to the DirName directory. This should work both when:
   # - the package is properly installed in which case DirName is a subdir
   #   of the package,
   # - when in pre-installation mode (basically inside a CVS hierarchy)
   #   in which case DirName and the package itself lie at the same
   #   filesystem level.
   # In both cases we need to express the full path to DirName relatively
   # to the path to this __init__.py. For this we rely on __path__ variable.
   # In order to make sure we got the correct Path, we check for the
   # existence of FileName.
   InstallModePath = os.path.join(__path__[0], DirName + "/")
   if os.path.isfile(os.path.join(InstallModePath, FileName)):
      return InstallModePath
   PreInstallModePath = os.path.join(__path__[0], "..", DirName + "/")
   if os.path.isfile(os.path.join(PreInstallModePath, FileName)):
      return PreInstallModePath
   print "Unfound directory ", DirName
   return None

### Setup the path to the dictionaries. WARNING: this needs to be done
#   BEFORE importation of the shadow classse generated by swig as found
#   in gdcm, since the dynamic library loads the standard dictionary
#   when dynamically loaded.
#   We consider we succefully found the dictionaries path when we encounter
#   the standard dictionary i.e. the file dicomV3.dic.

try:
   ### First consider the environnement variable.
   os.environ["GDCM_DICT_PATH"]
   if not os.path.isfile(os.path.join(os.environ["GDCM_DICT_PATH"],
                                      "dicomV3.dic")):
      raise KeyError
except KeyError:
   Path = BuildInstallOrPreinstallPath("Dicts", "dicomV3.dic")
   if not Path:
      print "Path to dictionaries is mandatory. Exiting"
      sys.exit(1)
   os.environ["GDCM_DICT_PATH"] = Path

### Set up the path to the data images for the demos.
GDCM_DATA_PATH = BuildInstallOrPreinstallPath("Test", "test.acr")

### Set up the path to the data images of the test suite.
GDCM_TEST_DATA_PATH = BuildInstallOrPreinstallPath("gdcmData", "test.acr")

### Import the swig generated shadow classes.
try:
   import gdcm
except ImportError,e:
   print e
   raise ImportError, "gdcm extension not imported."

### Expose only the necessary stuff
gdcmHeader = gdcm.gdcmHeader
gdcmDictSet = gdcm.gdcmDictSet
gdcmFile = gdcm.gdcmFile
