/**
 * \page DoxyInstallation Installing gdcm and gdcmPython
 * \section DoxyRequirements Requirements
 *  - For the core C++ library you shall need a C++ compiler with the
 *    <list> and <map> STL containers. Gdcm is developped and tested under:
 *    -# GNU/linux (gcc 2.96.x)
 *    -# Win32/VC++ 6.x
 *     .
 *  - For \ref DoxyPythonComplete you shall need:
 *    -# <A HREF="http://www.python.org/2.2.2/">Python version 2.2.x</A>
 *    -# <A HREF="http://www.swig.org">Swig</A> version >= 1.3.17x (in order
 *       to handle C++ member overloading, shadow classes and static methods)
 *       \htmlonly
 *       <UL>
 *         <LI>Rpms for GNU/linux:
 *      <A HREF="http://www.creatis.insa-lyon.fr/rpm/swig13-1.3.17-1.i386.rpm">
 *             swig13-1.3.17-1.i386.rpm</A>,
 *      <A HREF="http://www.creatis.insa-lyon.fr/rpm/swig13-1.3.17-1.src.rpm">
 *             swig13-1.3.17-1.src.rpm</A>.
 *         <LI>for Win32 you shall need to compile 
 *             <A HREF="http://www.swig.org/download.html">the sources</A>
 *       </UL>
 *       \endhtmlonly
 *     .
 *  .
 * 
 * \section DoxyInstallLinux Linux
 * \subsection DoxyInstallLinuxCvs Starting from cvs sources.
 *     - Retrieve the sources through cvs
 *     - <TT>cd gdcm</TT>
 *     - <TT>./autogen.sh --help</TT> in order to select your preferences
 *     - <TT>./autogen.sh</TT> to launch the usual automake/autoconf
 *       process e.g.
 *       -# <TT>./autogen.sh --prefix=/where/ever/you/want</TT>
 *           to configure the script to force installation in a specified
 *            place.
 *       -# <TT>./autogen.sh --enable-python</TT> to generate the
 *              python wrappers.
 *        .
 *     - <TT>make</TT> (or <TT>make 'CFLAGS=-g</TT>...)
 *     - <TT>make instal</TT>
 *     - As usual, you can optionnally:
 *       -# <TT>make clean</TT>
 *       -# <TT>make 'CFLAGS='</TT> if you are in hurry and want to omit
 *          "-g -O2" default flags
 *       -# <TT>make snapshot</TT>
 *        .
 *     .
 * \subsection DoxyInstallLinuxSources Starting from the sources (snapshot).
 *     The process is exactly the same as the one using the cvs sources
 *     (see above) except that you shall use <TT>./configure</TT> instead
 *     of <TT>./autogen.sh</TT>
 *
 * \section DoxyInstallWindoze Windows
 *     - Retrieve the sources through the tarball
 *     - Launch VC++ by opening the <TT>gdcm.dsw</TT> workspace.
 *     - Proceed with building the required projects.
 *     .
 */
